---
- name: nextcloud app docker directories exist
  file:
    path: '{{ item }}'
    state: directory
  loop:
    - '{{ nextcloud_docker_directory }}'

- name: nextcloud application docker container
  docker_container:
    name: next
    image: 'nextcloud:17'
    pull: true
    volumes:
      - '{{ nextcloud_docker_directory }}:/var/www/html:rw'
      - '{{ nextcloud_data_location }}:/var/www/html/data:rw'
    # TODO figure out the simplest multihost version
    # ports:
    #   - '{{ nextcloud_app_port }}:80'
    networks:
      - name: '{{ traefik_docker_network | default(bridge) }}'
    networks_cli_compatible: true
    links:
      - nextdb
    env:
      MYSQL_DATABASE: 'nextcloud'
      MYSQL_USER: '{{ nextcloud_db_user }}'
      MYSQL_PASSWORD: '{{ nextcloud_db_user_password }}'
      MYSQL_ROOT_PASSWORD: '{{ nextcloud_db_root_password }}'
      MYSQL_HOST: "{{ nextcloud_db_host | default('127.0.0.1') }}"
      NEXTCLOUD_DATA_DIR: '/var/www/html/data'
      # TODO: Investigate env var NEXTCLOUD_TRUSTED_DOMAIN
      # NEXTCLOUD_TRUSTED_DOMAINS: 'nextcloud.{{ nextcloud_domain }}'
      NEXTCLOUD_TRUSTED_DOMAINS: '{{ nextcloud_trusted_domains }}'
    restart_policy: unless-stopped
    # memory: '{{ nextcloud_app_memory }}'
    labels:
      traefik.enable: 'true'
      traefik.http.routers.next.entrypoints: 'http'
      traefik.http.routers.next.rule: 'Host(`next.{{ base_domain }}`)'
      traefik.http.middlewares.next-https-redirect.redirectscheme.scheme:
        'https'
      traefik.http.routers.next.middlewares: 'next-https-redirect'
      traefik.http.routers.next-secure.entrypoints: 'https'
      traefik.http.routers.next-secure.rule: 'Host(`next.{{ base_domain }}`)'
      traefik.http.routers.next-secure.tls: 'true'
      traefik.http.routers.next-secure.tls.certresolver: 'http'
      traefik.http.routers.next-secure.service: 'next'
      traefik.http.services.next.loadbalancer.server.port: '80'
      traefik.docker.network: '{{ traefik_docker_network }}'
